(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[698],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=l,y=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},474:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return u},default:function(){return s}});var r=n(2122),l=n(9756),a=(n(7294),n(3905)),i={sidebar_position:5,id:"layout",title:"Configure layouts",sidebar_label:"Configure layouts"},o={unversionedId:"layout",id:"layout",isDocsHomePage:!1,title:"Configure layouts",description:"---",source:"@site/docs/configlayout.md",sourceDirName:".",slug:"/layout",permalink:"/stencil/docs/layout",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/configlayout.md",version:"current",sidebar_label:"Configure layouts",sidebarPosition:5,frontMatter:{sidebar_position:5,id:"layout",title:"Configure layouts",sidebar_label:"Configure layouts"},sidebar:"tutorialSidebar",previous:{title:"Dynamic plot JSON format",permalink:"/stencil/docs/dynamic"},next:{title:"Deployment",permalink:"/stencil/docs/deploy"}},u=[{value:"STENCIL layouts",id:"stencil-layouts",children:[{value:"layout (Required)",id:"layout-required",children:[]},{value:"plotTitles (Optional)",id:"plottitles-optional",children:[]},{value:"direction (Optional)",id:"direction-optional",children:[]},{value:"plotSizes (Optional)",id:"plotsizes-optional",children:[]},{value:"spacing (Optional)",id:"spacing-optional",children:[]}]},{value:"Example layoutFormat",id:"example-layoutformat",children:[]}],p={toc:u};function s(e){var t=e.components,n=(0,l.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"stencil-layouts"},"STENCIL layouts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"STENCIL layouts are defined in ",(0,a.kt)("em",{parentName:"li"},"/frontend/src/Config.js")),(0,a.kt)("li",{parentName:"ul"},"The constant value 'layoutFormat' defines all available layouts in STENCIL"),(0,a.kt)("li",{parentName:"ul"},"The overall structure is in JSON"),(0,a.kt)("li",{parentName:"ul"},"There are 5 variables that can determine the organization of the layout.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"layOut"),(0,a.kt)("li",{parentName:"ul"},"direction"),(0,a.kt)("li",{parentName:"ul"},"plotSizes"),(0,a.kt)("li",{parentName:"ul"},"spacing"),(0,a.kt)("li",{parentName:"ul"},"plotTitles")))),(0,a.kt)("h3",{id:"layout-required"},"layout (Required)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Bracket delimited format with the stepID's bracketed. These stepID's correspond to the JSON payloads and place the data relative to the other stepID's"),(0,a.kt)("li",{parentName:"ul"},"Placing two stepID's within an extra set of brackets activates a radio button system by which either stepID is visually toggled")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Simple layout:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"layOut: [[0], [1]],\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Complicated layout:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"layOut: [ [[0,1]],[2],[3],[4] ],\n")),(0,a.kt)("h3",{id:"plottitles-optional"},"plotTitles (Optional)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Used when stepID's are in radio button mode"),(0,a.kt)("li",{parentName:"ul"},"Provides the titles for the radio buttons"),(0,a.kt)("li",{parentName:"ul"},"Uses the stepID to place the correct titles")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'plotTitles: {0:"Forward", 1:"Reverse"}\n')),(0,a.kt)("h3",{id:"direction-optional"},"direction (Optional)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This variable determines whether the stepID's are oriented along the X (column) or Y (row) axis"),(0,a.kt)("li",{parentName:"ul"},"Column aligned is the default when not specified")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'direction: "column",\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Alternative:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'direction: "row",\n')),(0,a.kt)("h3",{id:"plotsizes-optional"},"plotSizes (Optional)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This variable allows a user to set the individual sizes for each stepID within a layOut"),(0,a.kt)("li",{parentName:"ul"},"This is useful when plots should be visualized at different sizes."),(0,a.kt)("li",{parentName:"ul"},"By default, a plot is set to 600 x 500 pixels when not explicitly undefined")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"plotSizes: {\n  0:[800,600],\n}\n")),(0,a.kt)("h3",{id:"spacing-optional"},"spacing (Optional)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This variable sets the spacing between stepIDs")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"spacing: 8,\n")),(0,a.kt)("h2",{id:"example-layoutformat"},"Example layoutFormat"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'const layoutFormat = {\n  SingleChart: {\n    layOut: [[0]],\n    direction: "column",\n    plotSizes: {\n      0:[800,600],\n    }\n  },\n\n  DoubleChart: {\n    layOut: [[0], [1]],\n    direction: "column",\n    plotSizes: {\n      0:[800,600],\n      1:[800,600]\n    }\n  },\n\n  Motif_Analysis: {\n    layOut: [ [[0,1]],[2],[3],[4] ],\n    direction: "column",\n    spacing: 8,\n    plotSizes: {\n      0:[300,150],\n      1:[300,150],\n      2:[400,300],\n      3:[250,500],\n      4:[300,500]\n    },\n    plotTitles: {0:"Forward", 1:"Reverse"}\n  },\n};\n')))}s.isMDXComponent=!0}}]);