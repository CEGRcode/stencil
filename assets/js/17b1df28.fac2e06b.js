(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[810],{172:function(a,t,e){"use strict";e.r(t),e.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p},default:function(){return u}});var l=e(2122),n=e(9756),r=(e(7294),e(3905)),i={sidebar_position:3,id:"payload",title:"STENCIL POST payload",sidebar_label:"STENCIL payload"},o={unversionedId:"payload",id:"payload",isDocsHomePage:!1,title:"STENCIL POST payload",description:"---",source:"@site/docs/payload.md",sourceDirName:".",slug:"/payload",permalink:"/stencil/docs/payload",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/payload.md",version:"current",sidebar_label:"STENCIL payload",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"payload",title:"STENCIL POST payload",sidebar_label:"STENCIL payload"},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/stencil/docs/quick"},next:{title:"Dynamic plot JSON format",permalink:"/stencil/docs/dynamic"}},p=[{value:"STENCIL payload",id:"stencil-payload",children:[]},{value:"libraryData Array",id:"librarydata-array",children:[]},{value:"Example Payload",id:"example-payload",children:[]}],s={toc:p};function u(a){var t=a.components,e=(0,n.Z)(a,["components"]);return(0,r.kt)("wrapper",(0,l.Z)({},s,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"stencil-payload"},"STENCIL payload"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"projectId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"projectId is the highest level of categorizing the data in STENCIL."),(0,r.kt)("li",{parentName:"ul"},"STENCIL consists of many projects."),(0,r.kt)("li",{parentName:"ul"},"Each project consists of many samples and each sample consist of many libraries.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"libraryType")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Type of the library that is POSTed to STENCIL."),(0,r.kt)("li",{parentName:"ul"},'Examples are "RNA-seq", "ATAC-seq", and "ChIP-seq".')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"sampleId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Name of the sample which the library belongs."),(0,r.kt)("li",{parentName:"ul"},"One sample can have multiple libraries."),(0,r.kt)("li",{parentName:"ul"},"An example of multiple libraries for a sample may be different replicates for a sample.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"libraryId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An ID given to a library that is POSTed from Galaxy to STENCIL.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"libraryDescription")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Optional free-form string description about the library")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"createdBy")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Username of the Galaxy account under which the library is POSTed.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"createTimestamp")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The time the library is originally POSTed to STENCIL")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"updatedBy")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Username of the Galaxy account under which the POST is updated.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"updateTimestamp")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Timestamp from when the library was last updated.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"token")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"API key that is used to verify permission to POST to Stencil"),(0,r.kt)("li",{parentName:"ul"},"This is defined in the backend's .env file under SVC_STENCIL_PWD")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"groupTag")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An array of additional meta information associated with each library."),(0,r.kt)("li",{parentName:"ul"},"An example is Galaxy HistoryID where the associated data read by STENCIL resides.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"libraryData")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An array element containing the meta-information for each plot/chart/table/image POSTed to STENCIL."),(0,r.kt)("li",{parentName:"ul"},"The format of this element is detailed below.")),(0,r.kt)("h2",{id:"librarydata-array"},"libraryData Array"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"id")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A unique id assigned to each dataset in Galaxy"),(0,r.kt)("li",{parentName:"ul"},"If a Galaxy historyID is POSTed to STENCIL using this parameter, the path to reproducibility is maintained")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"dataType")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Type of data to be visualized in STENCIL."),(0,r.kt)("li",{parentName:"ul"},"Examples are PNG, SVG, JPG, basictable, lineplot, barchart, scatterplot, heatmap")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"layoutId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This is the unique ID of the layoutID that this data should be applied to."),(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("a",{parentName:"li",href:"/stencil/docs/layout"},"Configure Layout")," for additional details.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"layoutTitle")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This is title for the layout section.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"tabId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each Layout may consists of multiple Tabs."),(0,r.kt)("li",{parentName:"ul"},"This variable sets the displayed name of Tabs.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"URL of the location where STENCIL can access the data resides in Galaxy."),(0,r.kt)("li",{parentName:"ul"},"This can be any arbitrary URL")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"stepId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each Tab consists of multiple \u201cSteps\u201d."),(0,r.kt)("li",{parentName:"ul"},"Steps indicates where exactly in the Tab the data needs to be visualized.")),(0,r.kt)("h2",{id:"example-payload"},"Example Payload"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example payload:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "projectId": "Yeast Epigenome Project",\n  "libraryType": "Meta-analysis",\n  "sampleId": "UMAP meta-analysis",\n  "libraryId": "UMAP",\n  "libraryDescription": "UMAP meta-analysis of all ChIP-exo data-sets generated in the Yeast Epigenome Project",\n  "createdBy": "cegr@cornell.edu",\n  "token": "SGAN9WTPAUCAYDO8A8HD",\n  "submitter": "cegr@cornell.edu",\n  "libraryData": [\n    {\n        "id": "UMAP_plot",\n        "dataType": "scatterplot",\n        "layoutId": "SingleChart",\n        "layoutTitle": "UMAP of Yeast Epigenome",\n        "tabId": "Scatter Plot",\n        "URL": "http://localhost:8081/localdata/YEP/UMAP/UMAP_scatterplot.json",\n        "stepId": "0"\n    },\n    {\n      "id": "UMAP_rawdata",\n        "dataType": "basictable",\n      "layoutId": "SingleChart",\n        "layoutTitle": "UMAP of Yeast Epigenome",\n      "tabId": "UMAP Data",\n      "URL": "http://localhost:8081/localdata/YEP/UMAP/UMAP_table.json",\n      "stepId": "0"\n    }\n  ]\n}\n')))}u.isMDXComponent=!0}}]);