"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[107],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),d=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,g=c["".concat(i,".").concat(m)]||c[m]||u[m]||a;return n?o.createElement(g,l(l({ref:t},p),{},{components:n})):o.createElement(g,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var d=2;d<a;d++)l[d]=n[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8597:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return d},toc:function(){return p},default:function(){return c}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],s={sidebar_position:1,id:"deploystart",title:"Deployment preparations",sidebar_label:"Deployment preparations"},i=void 0,d={unversionedId:"Production Deployment/Ubuntu 20.04/deploystart",id:"Production Deployment/Ubuntu 20.04/deploystart",title:"Deployment preparations",description:"---",source:"@site/docs/Production Deployment/Ubuntu 20.04/deploystart.md",sourceDirName:"Production Deployment/Ubuntu 20.04",slug:"/Production Deployment/Ubuntu 20.04/deploystart",permalink:"/stencil/docs/Production Deployment/Ubuntu 20.04/deploystart",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Production Deployment/Ubuntu 20.04/deploystart.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"deploystart",title:"Deployment preparations",sidebar_label:"Deployment preparations"},sidebar:"tutorialSidebar",previous:{title:"SSL security",permalink:"/stencil/docs/Production Deployment/CentOS 8/ssl"}},p=[{value:"Deploying the application",id:"deploying-the-application",children:[],level:2},{value:"Update and patch OS",id:"update-and-patch-os",children:[],level:2},{value:"Install NodeJS",id:"install-nodejs",children:[],level:2},{value:"Install MongoDB",id:"install-mongodb",children:[],level:2},{value:"Install Apache",id:"install-apache",children:[],level:2},{value:"Make Service account",id:"make-service-account",children:[],level:2},{value:"Clone the repo",id:"clone-the-repo",children:[],level:2}],u={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"deploying-the-application"},"Deploying the application"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"These instructions assume a clean build of Ubuntu 20.04 LTS with none of the dependencies installed.")),(0,a.kt)("p",null,"The instructions here have been tested for a server running ",(0,a.kt)("inlineCode",{parentName:"p"},"Ubuntu 20.04"),". However, all the app related configuration and deployment should be generally valid for any linux distribution. Install relevant dependencies based on respective distros."),(0,a.kt)("h2",{id:"update-and-patch-os"},"Update and patch OS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Best practice is to ensure your system is up-to-date before beginning any modifications")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt upgrade\nsudo reboot\n")),(0,a.kt)("h2",{id:"install-nodejs"},"Install NodeJS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt-get install -y nodejs\nnode --version\n# 14.19.3\n")),(0,a.kt)("h2",{id:"install-mongodb"},"Install MongoDB"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -\necho "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list\nsudo apt-get install -y mongodb-org\ncat /etc/apt/sources.list.d/mongodb-org-5.0.list\nsudo apt-get update\nsudo apt-get install -y mongodb-org\necho "mongodb-org hold" | sudo dpkg --set-selections\necho "mongodb-org-database hold" | sudo dpkg --set-selections\necho "mongodb-org-server hold" | sudo dpkg --set-selections\necho "mongodb-org-shell hold" | sudo dpkg --set-selections\necho "mongodb-org-mongos hold" | sudo dpkg --set-selections\necho "mongodb-org-tools hold" | sudo dpkg --set-selections\nsudo systemctl start mongod\nsudo systemctl daemon-reload\nsudo systemctl status mongod\nsudo systemctl enable mongod #stop #restart\nmongosh # test mongo shell access\n')),(0,a.kt)("h2",{id:"install-apache"},"Install Apache"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt install apache2\nsudo ufw app list\nsudo ufw status\nsudo systemctl status apache2\n")),(0,a.kt)("h2",{id:"make-service-account"},"Make Service account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"TODO\n")),(0,a.kt)("h2",{id:"clone-the-repo"},"Clone the repo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/CEGRcode/stencil.git\n")))}c.isMDXComponent=!0}}]);