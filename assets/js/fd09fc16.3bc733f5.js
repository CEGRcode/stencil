"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[821],{3905:function(e,r,n){n.d(r,{Zo:function(){return c},kt:function(){return m}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),l=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=l(e.components);return t.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||s;return n?t.createElement(y,i(i({ref:r},c),{},{components:n})):t.createElement(y,i({ref:r},c))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var p in r)hasOwnProperty.call(r,p)&&(o[p]=r[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8823:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var t=n(3117),a=n(102),s=(n(7294),n(3905)),i=["components"],o={sidebar_position:4,id:"apiaccess",title:"API access",sidebar_label:"API access"},p=void 0,l={unversionedId:"STENCIL Guides/apiaccess",id:"STENCIL Guides/apiaccess",title:"API access",description:"---",source:"@site/docs/STENCIL Guides/apiaccess.md",sourceDirName:"STENCIL Guides",slug:"/STENCIL Guides/apiaccess",permalink:"/stencil/docs/STENCIL Guides/apiaccess",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/STENCIL Guides/apiaccess.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,id:"apiaccess",title:"API access",sidebar_label:"API access"},sidebar:"tutorialSidebar",previous:{title:"Configure layouts",permalink:"/stencil/docs/STENCIL Guides/layout"}},c=[{value:"API Access",id:"api-access",children:[{value:"postLibrary.py",id:"postlibrarypy",children:[{value:"Example usage:",id:"example-usage",children:[],level:4}],level:3},{value:"deleteLibrary.py",id:"deletelibrarypy",children:[{value:"Example usage:",id:"example-usage-1",children:[],level:4}],level:3},{value:"getLibraries.py",id:"getlibrariespy",children:[{value:"Example usage:",id:"example-usage-2",children:[],level:4}],level:3}],level:2}],u={toc:c};function d(e){var r=e.components,n=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"api-access"},"API Access"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"STENCIL NodeJS backend is accessible programmatically"),(0,s.kt)("li",{parentName:"ul"},"Example scripts for accessing STENCIL are provided in ",(0,s.kt)("em",{parentName:"li"},"/backend/utils"))),(0,s.kt)("h3",{id:"postlibrarypy"},"postLibrary.py"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"#!/usr/bin/python\n\nimport argparse\nimport json\nimport requests\n\n# reference : https://realpython.com/python-requests/\n\nif __name__ == '__main__':\n\n    parser = argparse.ArgumentParser(\n        description='Inserts JSON into backend using the POST request')\n    parser.add_argument('jsonFile', help='Library data in JSON format')\n    args = parser.parse_args()\n\n    URL = \"http://localhost:8081/libraries\"\n\n    # Reading the example.json\n    f=open(args.jsonFile, 'r')\n    value = json.load(f)\n    f.close()\n\n    response = requests.post(URL, json=value, verify=False)\n    print(f\"STATUS: {response.status_code}  \\nReason: {response.reason} \\nMessage: {response.content}\")\n")),(0,s.kt)("h4",{id:"example-usage"},"Example usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"python3 postLibrary.py libraryData.json\n")),(0,s.kt)("h3",{id:"deletelibrarypy"},"deleteLibrary.py"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Deletes library in STENCIL given libraryID and projectID"),(0,s.kt)("li",{parentName:"ul"},"Token must equal SVC_STENCIL_PWD")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'#!/usr/bin/python\n\nimport pprint\nimport json\nimport requests\nimport sys\n\n# reference : https://realpython.com/python-requests/\n\nif __name__ == \'__main__\':\n\n    URL = "http://localhost/libraries/libid/"\n\n    projectId = sys.argv[1]\n    libraryId = sys.argv[2]\n\n    token = "XXXXXX"\n\n    deleteURL = f"{URL}/{token}/{projectId}/{libraryId}"\n    response = requests.delete(deleteURL)\n    pprint.pprint(response.json())\n')),(0,s.kt)("h4",{id:"example-usage-1"},"Example usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"python3 deleteLibrary.py projectID libraryID\n")),(0,s.kt)("h3",{id:"getlibrariespy"},"getLibraries.py"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Retrieves ALL data in STENCIL in JSON format"),(0,s.kt)("li",{parentName:"ul"},"Token must equal SVC_STENCIL_PWD")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'#!/usr/bin/python\n\nimport argparse\nimport pprint\nimport requests\n\n# reference : https://realpython.com/python-requests/\n\nif __name__ == \'__main__\':\n\n    token = "XXXXXX"\n\n    URL = "http://localhost/libraries/all/"+ token\n\n    # making a GET request for all the samples.\n    print("\\n GET data \\n")\n    response = requests.get(URL,verify=False)\n    pprint.pprint(response.json())\n')),(0,s.kt)("h4",{id:"example-usage-2"},"Example usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"python3 getLibraries.py > ALL_DATA.json\n")))}d.isMDXComponent=!0}}]);