"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[801],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,_=c["".concat(p,".").concat(u)]||c[u]||m[u]||r;return n?o.createElement(_,l(l({ref:t},d),{},{components:n})):o.createElement(_,l({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:2,id:"deployback",title:"Production Backend Deployment",sidebar_label:"Backend deployment"},l=void 0,i={unversionedId:"Production Deployment/CentOS 8/deployback",id:"Production Deployment/CentOS 8/deployback",title:"Production Backend Deployment",description:"---",source:"@site/docs/Production Deployment/CentOS 8/deployback.md",sourceDirName:"Production Deployment/CentOS 8",slug:"/Production Deployment/CentOS 8/deployback",permalink:"/stencil/docs/Production Deployment/CentOS 8/deployback",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Production Deployment/CentOS 8/deployback.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"deployback",title:"Production Backend Deployment",sidebar_label:"Backend deployment"},sidebar:"tutorialSidebar",previous:{title:"Deployment preparations",permalink:"/stencil/docs/Production Deployment/CentOS 8/deploystart"},next:{title:"Frontend deployment",permalink:"/stencil/docs/Production Deployment/CentOS 8/deployfront"}},p={},s=[{value:"Install MongoDB",id:"install-mongodb",level:2},{value:"Add MongoDB repo to yum repo",id:"add-mongodb-repo-to-yum-repo",level:4},{value:"Install MongoDB",id:"install-mongodb-1",level:4},{value:"Configure SELinux policy to allow MongoDB to check system memory",id:"configure-selinux-policy-to-allow-mongodb-to-check-system-memory",level:4},{value:"Install new mongoDB policy exception",id:"install-new-mongodb-policy-exception",level:4},{value:"Configure SELinux policy to allow MongoDB to report on real-time system usage",id:"configure-selinux-policy-to-allow-mongodb-to-report-on-real-time-system-usage",level:4},{value:"Install new mongoDB policy exception",id:"install-new-mongodb-policy-exception-1",level:4},{value:"Configure server to start MongoDB on system reboot",id:"configure-server-to-start-mongodb-on-system-reboot",level:4},{value:"Start MongoDB server now",id:"start-mongodb-server-now",level:4},{value:"Install STENCIL-backend",id:"install-stencil-backend",level:2},{value:"Configuring backend .env",id:"configuring-backend-env",level:2},{value:"Open Firewall",id:"open-firewall",level:2},{value:"Install NodeJS load balancer (PM2)",id:"install-nodejs-load-balancer-pm2",level:2},{value:"Configure PM2",id:"configure-pm2",level:3},{value:"Spin up STENCIL backend",id:"spin-up-stencil-backend",level:3},{value:"Save PM2 configuration",id:"save-pm2-configuration",level:3},{value:"Convenient commands for PM2",id:"convenient-commands-for-pm2",level:3},{value:"Restart PM2 instance",id:"restart-pm2-instance",level:5},{value:"Reload PM2 instance",id:"reload-pm2-instance",level:5},{value:"Stop PM2 instance",id:"stop-pm2-instance",level:5},{value:"Delete PM2 instance",id:"delete-pm2-instance",level:5},{value:"Learn More",id:"learn-more",level:2}],d={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"install-mongodb"},"Install MongoDB"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The following steps assume you are logged in as root")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo su -\n")),(0,a.kt)("h4",{id:"add-mongodb-repo-to-yum-repo"},"Add MongoDB repo to yum repo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat > /etc/yum.repos.d/mongodb-org-5.0.repo <<EOF\n[mongodb-org-5.0]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/\\$releasever/mongodb-org/5.0/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-5.0.asc\nEOF\n")),(0,a.kt)("h4",{id:"install-mongodb-1"},"Install MongoDB"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo yum -y install mongodb-org\n")),(0,a.kt)("h4",{id:"configure-selinux-policy-to-allow-mongodb-to-check-system-memory"},"Configure SELinux policy to allow MongoDB to check system memory"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo yum install checkpolicy\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat > mongodb_cgroup_memory.te <<EOF\nmodule mongodb_cgroup_memory 1.0;\nrequire {\n      type cgroup_t;\n      type mongod_t;\n      class dir search;\n      class file { getattr open read };\n}\n#============= mongod_t ==============\nallow mongod_t cgroup_t:dir search;\nallow mongod_t cgroup_t:file { getattr open read };\nEOF\n")),(0,a.kt)("h4",{id:"install-new-mongodb-policy-exception"},"Install new mongoDB policy exception"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"checkmodule -M -m -o mongodb_cgroup_memory.mod mongodb_cgroup_memory.te\nsemodule_package -o mongodb_cgroup_memory.pp -m mongodb_cgroup_memory.mod\nsudo semodule -i mongodb_cgroup_memory.pp\n")),(0,a.kt)("h4",{id:"configure-selinux-policy-to-allow-mongodb-to-report-on-real-time-system-usage"},"Configure SELinux policy to allow MongoDB to report on real-time system usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat > mongodb_proc_net.te <<EOF\nmodule mongodb_proc_net 1.0;\nrequire {\n        type sysctl_net_t;\n        type mongod_t;\n        class dir search;\n        class file { getattr open read };\n}\n#============= mongod_t ==============\n#!!!! This avc is allowed in the current policy\nallow mongod_t sysctl_net_t:dir search;\nallow mongod_t sysctl_net_t:file open;\n#!!!! This avc is allowed in the current policy\nallow mongod_t sysctl_net_t:file { getattr read };\nEOF\n")),(0,a.kt)("h4",{id:"install-new-mongodb-policy-exception-1"},"Install new mongoDB policy exception"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"checkmodule -M -m -o mongodb_proc_net.mod mongodb_proc_net.te\nsemodule_package -o mongodb_proc_net.pp -m mongodb_proc_net.mod\nsudo semodule -i mongodb_proc_net.pp\n")),(0,a.kt)("h4",{id:"configure-server-to-start-mongodb-on-system-reboot"},"Configure server to start MongoDB on system reboot"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl enable mongod\n")),(0,a.kt)("h4",{id:"start-mongodb-server-now"},"Start MongoDB server now"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl start mongod\n")),(0,a.kt)("h2",{id:"install-stencil-backend"},"Install STENCIL-backend"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd stencil/backend\nnpm install\n")),(0,a.kt)("h2",{id:"configuring-backend-env"},"Configuring backend .env"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},".env")," file or edit the existing."),(0,a.kt)("li",{parentName:"ul"},"Add settings to your ",(0,a.kt)("inlineCode",{parentName:"li"},".env")," file as described in the table below.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Config details")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Setting"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"DB_HOST")),(0,a.kt)("td",{parentName:"tr",align:null},"Use ",(0,a.kt)("inlineCode",{parentName:"td"},"localhost")," to connect to a local installation of mongodb (default), please set it to ",(0,a.kt)("inlineCode",{parentName:"td"},"mongo:27017")," while creating a docker image.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"DB_NAME")),(0,a.kt)("td",{parentName:"tr",align:null},"Name of the database to store app data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"API_PORT")),(0,a.kt)("td",{parentName:"tr",align:null},"API port name data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"FRONT_API")),(0,a.kt)("td",{parentName:"tr",align:null},"root URL of the frontend data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"HTTPS")),(0,a.kt)("td",{parentName:"tr",align:null},"Boolean determining if STENCIL uses HTTPS data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"HTTPSCERT")),(0,a.kt)("td",{parentName:"tr",align:null},"Not used if HTTPS == false: Path of https certificate  data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"HTTPSKEY")),(0,a.kt)("td",{parentName:"tr",align:null},"Not used if HTTPS == false: Path of https key data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"SESSION_ENCRYPTION")),(0,a.kt)("td",{parentName:"tr",align:null},"String used for encript session variables in cookies.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"MASTER_PWD")),(0,a.kt)("td",{parentName:"tr",align:null},"Master login password data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"SVC_STENCIL_PWD")),(0,a.kt)("td",{parentName:"tr",align:null},"Password to enable STENCIL POST from token data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"PROXY_SETTING")),(0,a.kt)("td",{parentName:"tr",align:null},"Proxy address data.")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"default ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," configuration for local development")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'DB_HOST="localhost"\nDB_NAME="stencilDB"\nAPI_PORT=8081\nFRONT_API="https://localhost:3000"\nHTTPS=true\nHTTPSCERT = "/home/xxx/fullchain.pem"   \nHTTPSKEY = "/home/xxx/privkey.pem"\nSESSION_ENCRYPTION = "xxxxxx"\nMASTER_PWD = "aaaaaa"\nSVC_STENCIL_PWD = "bbbbbb"\nPROXY_SETTING=\'{"/xxx" : "http://xxx.xxxx.xxxx.xx:xxxx"}\'\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"FRONT_API should be set to the address of the STENCIL homepage, this is critical for authentication re-directs"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"SSO_TOKEN_KEY and SSO_TOKEN_IV are used to encrypting user ID by SSO protected redirecting page, and then decrypted by stencil login page. The key must be 32, IV must be 16 char; You should replace the two strings to your own.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"An example SSO redirecting page is provided in the repository directory sso_apache_site. The restricted directory should be an SSO protected directory. The redirecting page restricted/index.html should be defined as SSOURL. The cgi-bin/stencil.cgi.py file should be modifiedto match SSO_TOKEN_KEY and SSO_TOKEN_IV and redirect URL.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'If your frontend app needs to access api call from 3rd party, e.g. Galaxy server, you need to use proxy through backend server. In the frontend app, the URL "',(0,a.kt)("a",{parentName:"p",href:"http://xxx.xxxx.xxxx.xx:xxxx/datasets/%7Boptions%7D%22"},'http://xxx.xxxx.xxxx.xx:xxxx/datasets/{options}"'),' should be replaced with "http://backendserver:xxxx/datasets/{options}". Most browsers would prohibit cross-domain call for the front end, so that proxy is needed.'))),(0,a.kt)("h2",{id:"open-firewall"},"Open Firewall"),(0,a.kt)("p",null,"By default, the backend will not be open to the public. Add an exception to open the port the backed is serving at. This should be the 'API_PORT' variable declared in the .env file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Required for public access to the backend\nsudo firewall-cmd --permanent --add-port=8081/tcp\n# Restart Firewall\nsudo firewall-cmd --reload\n")),(0,a.kt)("h2",{id:"install-nodejs-load-balancer-pm2"},"Install NodeJS load balancer (PM2)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/pm2"},(0,a.kt)("inlineCode",{parentName:"a"},"pm2"))," a production process manager for Node.js applications with a built-in load balancer.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo npm i -g pm2\n")),(0,a.kt)("h3",{id:"configure-pm2"},"Configure PM2"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"PM2 can be configured to auto-restart upon system reboot and to bring the STENCIL backend back online")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pm2 startup\n")),(0,a.kt)("p",null,"Example resulting output from CentOS 8 and user wkl29:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[PM2] Init System found: systemd\n[PM2] To setup the Startup Script, copy/paste the following command:\nsudo env PATH=$PATH:/usr/bin /usr/local/lib/node_modules/pm2/bin/pm2 startup systemd -u wkl29 --hp /home/wkl29\n")),(0,a.kt)("p",null,"Copy/paste the resulting sudo command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[wkl29@artemis backend]$ sudo env PATH=$PATH:/usr/bin /usr/local/lib/node_modules/pm2/bin/pm2 startup systemd -u wkl29 --hp /home/wkl29\n[sudo] password for wkl29:\n\n                        -------------\n\n__/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\____________/\\\\\\\\____/\\\\\\\\\\\\\\\\\\_____\n _\\/\\\\\\/////////\\\\\\_\\/\\\\\\\\\\\\________/\\\\\\\\\\\\__/\\\\\\///////\\\\\\___\n  _\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\//\\\\\\____/\\\\\\//\\\\\\_\\///______\\//\\\\\\__\n   _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__\\/\\\\\\\\///\\\\\\/\\\\\\/_\\/\\\\\\___________/\\\\\\/___\n    _\\/\\\\\\/////////____\\/\\\\\\__\\///\\\\\\/___\\/\\\\\\________/\\\\\\//_____\n     _\\/\\\\\\_____________\\/\\\\\\____\\///_____\\/\\\\\\_____/\\\\\\//________\n      _\\/\\\\\\_____________\\/\\\\\\_____________\\/\\\\\\___/\\\\\\/___________\n       _\\/\\\\\\_____________\\/\\\\\\_____________\\/\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\n        _\\///______________\\///______________\\///__\\///////////////__\n\n\n                          Runtime Edition\n\n        PM2 is a Production Process Manager for Node.js applications\n                     with a built-in Load Balancer.\n\n                Start and Daemonize any application:\n                $ pm2 start app.js\n\n                Load Balance 4 instances of api.js:\n                $ pm2 start api.js -i 4\n\n                Monitor in production:\n                $ pm2 monitor\n\n                Make pm2 auto-boot at server restart:\n                $ pm2 startup\n\n                To go further checkout:\n                http://pm2.io/\n\n\n                        -------------\n\n[PM2] Init System found: systemd\nPlatform systemd\nTemplate\n[Unit]\nDescription=PM2 process manager\nDocumentation=https://pm2.keymetrics.io/\nAfter=network.target\n\n[Service]\nType=forking\nUser=wkl29\nLimitNOFILE=infinity\nLimitNPROC=infinity\nLimitCORE=infinity\nEnvironment=PATH=/home/wkl29/.local/bin:/home/wkl29/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin\nEnvironment=PM2_HOME=/home/wkl29/.pm2\nPIDFile=/home/wkl29/.pm2/pm2.pid\nRestart=on-failure\n\nExecStart=/usr/local/lib/node_modules/pm2/bin/pm2 resurrect\nExecReload=/usr/local/lib/node_modules/pm2/bin/pm2 reload all\nExecStop=/usr/local/lib/node_modules/pm2/bin/pm2 kill\n\n[Install]\nWantedBy=multi-user.target\n\nTarget path\n/etc/systemd/system/pm2-wkl29.service\nCommand list\n[ 'systemctl enable pm2-wkl29' ]\n[PM2] Writing init configuration in /etc/systemd/system/pm2-wkl29.service\n[PM2] Making script booting at startup...\n[PM2] [-] Executing: systemctl enable pm2-wkl29...\nCreated symlink /etc/systemd/system/multi-user.target.wants/pm2-wkl29.service \u2192 /etc/systemd/system/pm2-wkl29.service.\n[PM2] [v] Command successfully executed.\n+---------------------------------------+\n[PM2] Freeze a process list on reboot via:\n$ pm2 save\n\n[PM2] Remove init script via:\n$ pm2 unstartup systemd\n")),(0,a.kt)("h3",{id:"spin-up-stencil-backend"},"Spin up STENCIL backend"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Once you have configured the backend, below command will create a daemon that keeps the app running & restarts on internal app crashes, ",(0,a.kt)("a",{parentName:"li",href:"https://pm2.io/doc/en/runtime/overview/?utm_source=pm2&utm_medium=website&utm_campaign=rebranding"},"read more here"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd stencil/backend\npm2 start server.js --name STENCILbackend\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You need to update the ",(0,a.kt)("inlineCode",{parentName:"li"},"options")," property in the above code with server specific certificate files, after requesting them from a certificate authority."),(0,a.kt)("li",{parentName:"ul"},"Restart the app to apply changes."),(0,a.kt)("li",{parentName:"ul"},"Read more about using certificates at ",(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"},"Node HTTPS docs"))),(0,a.kt)("h3",{id:"save-pm2-configuration"},"Save PM2 configuration"),(0,a.kt)("p",null,"This command lets PM2 know that all currently running apps (i.e., STENCIL) are to be restarted upon system reboot"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pm2 save\n")),(0,a.kt)("p",null,"Example output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[wkl29@artemis backend]$ pm2 save\n[PM2] Saving current process list...\n[PM2] Successfully saved in /home/wkl29/.pm2/dump.pm2\n")),(0,a.kt)("h3",{id:"convenient-commands-for-pm2"},"Convenient commands for PM2"),(0,a.kt)("h5",{id:"restart-pm2-instance"},"Restart PM2 instance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pm2 restart STENCILbackend\n")),(0,a.kt)("h5",{id:"reload-pm2-instance"},"Reload PM2 instance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pm2 reload STENCILbackend\n")),(0,a.kt)("h5",{id:"stop-pm2-instance"},"Stop PM2 instance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pm2 stop STENCILbackend\n")),(0,a.kt)("h5",{id:"delete-pm2-instance"},"Delete PM2 instance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pm2 delete STENCILbackend\n")),(0,a.kt)("h2",{id:"learn-more"},"Learn More"),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"PM2 documentation ",(0,a.kt)("a",{parentName:"li",href:"https://pm2.io/doc/en/runtime/overview/?utm_source=pm2&utm_medium=website&utm_campaign=rebranding"},"HERE"),".")))}m.isMDXComponent=!0}}]);